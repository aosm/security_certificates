{\rtf1\ansi\ansicpg1252\cocoartf949
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww18180\viewh17700\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\fs28 \cf0 								 
\b CertificateInstructions.rtf
\b0\fs26 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f1\fs24 \cf0 \
\pard\tx1440\tx2880\tx4320\tx5760\tx7200\tx8640\slleading40\ql\qnatural
\cf0 These are the procedures to follow when adding a root and/or intermediate certificate to the system.\
\
For the purposes of these instructions, assume that $SRCDIR is e.g. ~/tla. For purposes of illustration, assume that you have checked out a branch of the security_certificates project to the directory SECCERTDIR:\
\
	svk-co-branch PR-xxxxxxx security_certificates\
	cd tla/security_certificates\
	set SECCERTDIR=`pwd`\
\
(export SECCERTDIR=`pwd` if using zsh).\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\b \cf0 To add a root certificate:\
\

\b0 - Convert the certificate to DER form with either a .der, .crt, or .cer extension\
- Copy the file to $SECCERTDIR/roots/\
- Add the file to the security_certificates.xcode project in the "roots" folder, target security_certificates\
- Test all anchors, including the one you just added. You must have built cspxutils and clxutils; see the section\
   entitled "
\b To make the test tools". 
\b0 \
\
		cd $SECCERTDIR/roots\
		$SRCDIR/SecurityTests/clxutils/anchorTest/anchorSourceTest .\
\
   Another way to specify this would be like this:\
\
		export SRCTST=/SecurityTests/clxutils/anchorTest/\
		$SRCTST/anchorSourceTest .\
\
On my machine, I use for example\
\
	export LOCAL_BUILD_DIR=/Volumes/xenos/dev/build\
	export SRCDIR=/Volumes/xenos/dev/tla2\
	export SRCTST=$SRCDIR/SecurityTests/clxutils/anchorTest/\
\
- Build a new SystemRootCertificates.keychain and SystemTrustSettings.plist in place on your branch like this:\
\
      		cd $SECCERTDIR\
		./buildRootKeychain\
\
- The results of running the buildRootKeychain script are placed in $SECCERTDIR/BuiltKeychains. Manually\
   install those files like this, as root (this includes making a backup of the system files you're replacing):\
\
   		mkdir /System/Library/Keychains/saved\
		cp /System/Library/Keychains/System* /System/Library/Keychains/saved\
		cp $SECCERTDIR/BuiltKeychains/SystemRootCertificates.keychain $SECCERTDIR/BuiltKeychains/SystemTrustSettings.plist /System/Library/Keychains\
\
- Now run this (no longer as root, and assuming you've build cspxutils and clxutils):\
\
		$LOCAL_BUILD_DIR/anchorTest t\
\
   The 't' argument tells anchorTest to test SystemRootCertificates.keychain, not X509Anchors. \
\
- Assuming that test passes, check your changes into SVK - 
\b including the new SystemRootCertificates.keychain and SystemTrustSettings.plist. \

\b0    As of 8/29/06, these files are submitted to B&I "as is" in binary form, so they don't have to have an up-to-date (or even working)\
   Security.framework and securityd in order to build and install security_certificates.\
\
\

\b To add an intermediate certificate:\
\
\pard\tx1440\tx2880\tx4320\tx5760\tx7200\tx8640\slleading40\ql\qnatural

\b0 \cf0 - Follow the steps above "
\b To add a root certificate:
\b0 " if necessary. The project file additions can be done simultaneously,\
   but the roots must be actually installed for the intermediate tests to run properly.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 - Convert the certificate to DER form with either a .der, .crt, or .cer extension\
- Copy the file to tla/security_certificates/certs/\
- Add the file to the security_certificates.xcode project in the "certs" folder\
- Open the security_certificates target and drag (copy) the file to the 
\b bottom
\b0  "Copy Files" section\
- Test all intermediates, including the one you just added. You must have built cspxutils and clxutils; see the section\
   entitled "
\b To make the test tools". 
\b0 \
\
		cd $SECCERTDIR/certs\
		$SRCDIR/SecurityTests/clxutils/anchorTest/intermedSourceTest .\
\
   NOTE as of 8/29/06 the intermedSourceTest script *fails* due to expired certs per Radar 4614279. \
\
- Build a new SystemCACertificates.keychain in place on your branch like this:\
\
      		cd $SECCERTDIR\
		./buildCAKeychain\
\
- The result of running the buildCAKeychain script is placed in $SECCERTDIR/BuiltKeychains. Manually\
   install that file like this, as root (this includes making a backup of the system file you're replacing):\
\
   		mkdir /System/Library/Keychains/saved\
		cp /System/Library/Keychains/SystemCACertificates.keychain /System/Library/Keychains/saved\
		cp $SECCERTDIR/BuiltKeychains/SystemCACertificates.keychain /System/Library/Keychains\
\
- Now run this (no longer as root, and assuming you've build cspxutils and clxutils):\
\
		$SRCDIR/SecurityTests/clxutils/anchorTest/intermedTest\
\
  NOTE as of 8/29/06 the intermedTest script allows for expired certs per Radar 4614279. \
\
- Assuming that test passes, check your changes into SVK - 
\b including the new SystemCACertificates.keychain. \

\b0    As of 8/29/06, this file is submitted to B&I "as is" in binary form, so they don't have to have an up-to-date (or even working)\
   Security.framework and securityd in order to build and install security_certificates.\
\
\

\b To pre-flight an intermediate certificate
\b0 \
\
- Assume that the intermediate is intermed.crt with corresponding root root.crt\
- Run\
\
	$LOCAL_BUILD_DIR/certcrl -c intermed.crt -C root.crt -f\
\pard\tx1440\tx2880\tx4320\tx5760\tx7200\tx8640\slleading40\ql\qnatural
\cf0 \
\pard\tx1440\tx2880\tx4320\tx5760\tx7200\tx8640\slleading40\ql\qnatural

\b \cf0 To remove a root or intermediate
\b0 \
\
- Remove the file from the project\
- Remove the file from svk\
\

\b To make the test tools
\b0 \
\
To build and run the test tools, you must have the LOCAL_BUILD_DIR env var set to point to a build directory.\
\
- cd tla/SecurityTests/cspxutils\
- set LOCAL_BUILD_DIR ....\
- make all\
\

\b Converting from PEM
\b0 \
\
- openssl x509 -outform DER -in SoneraClass1CA.pem -out SoneraClass1.crt\
\

\b Converting from PKCS#7
\b0 \
\
If the file contains multiple certificates, you may have to split the file apart. Alternatively, import the p7 file into a blank keychain in Keychain Access, the drag each certificate out.\
\
openssl pkcs7  -inform DER -in IdenTrust_Root_X3.p7b -print_certs -out IdenTrust_Root_X3.pem\
openssl x509 -outform DER -in IdenTrust_Root_X3.pem -out IdenTrust_Root_X3.der\
\

\b Other useful scripts
\b0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0 \cf0 The following line was useful in determining which DoD roots and intermediates were not already in the source tree. It was run in the tla directory, then in the new directory. An opendiff of the two outputs shows what is new.\
\
	for n in *; do echo `openssl x509 -inform DER -noout -fingerprint -in $n` "   $n";done | sed 's/MD5 Fingerprint=//'   | sort\
\pard\tx1440\tx2880\tx4320\tx5760\tx7200\tx8640\slleading40\ql\qnatural

\f1 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\b \cf0 Finding expired roots
\b0 \
\
This is a useful check to run periodically, to see which roots may expire soon.\
\
	for n in *; do echo `openssl x509 -inform DER -noout -enddate -in $n` "   $n";done | sed 's/notAfter=//' | awk '\{print $4," ",$1," ",$2," ",$6\}' | sort\
\
Note that it does not sort in strict chronological order (e.g. Aug 2006 appears before Feb 2006).\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\slleading60\ql\qnatural

\b \cf0 \
Description of tools
\b0 \

\f1 anchorTest - verifies all the roots in either SystemRootCertificates.keychain (if you specify the 't' option) or X509Anchors. This test can be persuaded to ignore expired roots via the 'e' option. \
\
anchorSourceTest - like anchorTest, but just tests a directory full of anchor certs. Intended to pre-screen changes to security_certificates/roots. Run with one arg, a path to the directory full of root certs. Run with no args to get a hint.\
\
intermedTest - verifies contents of /System/Library/Keychains/SystemCACertificates.keychain. Run with no args, or with \'91q\'92 for quiet.\
\
intermedSourceTest - like intermedTest crossed with anchorSourceTest. Prescreens a directory full of intermediate certs. Run with one arg, a path to the directory full of intermediate certs. Run with no args to get a hint. All of these must be verifiable by the current SystemRootCertificates.keychain (so if you add an intermediate and the associated root to the security_certificates project, without updating SystemRootCertificates.keychain, this test will fail).\
\
\pard\tx1440\tx2880\tx4320\tx5760\tx7200\tx8640\slleading40\ql\qnatural

\b \cf0 History
\b0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs26 \cf0 29 Aug 2006	dmitch	Updated to reflect new trust structure for Leopard\
18 Dec 2006	jhurley	Added more useful scripts, history section, notes on zsh\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f1\fs24 \cf0 \
}